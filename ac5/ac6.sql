Linguagem SQL
SI 2C NOITE
Prazo: 23:59
Atividade contínua 6

sync4edu Foreducation EdTech
19:00
Desenvolva os scripts conforme previsto no arquivo anexo

AC6.sql
SQL
Seus trabalhos
Devolvidos

AC6.sql
SQL

AC6.txt
Texto
Atividade contínua 6
--EDUARDO MARINHO 1700158
--GUILHERME NOGUEIRA 1800232
--JOSE HENRIQUE 1800354
--NATALIA PANDOLFI 1800825
--SERGIO ALMEIDA 1800709



create DATABASE AC6
USE AC6
IF OBJECT_ID('MENSAGEM', 'U') IS NOT NULL
	DROP TABLE MENSAGEM
IF OBJECT_ID('ENTREGA', 'U') IS NOT NULL
	DROP TABLE ENTREGA
IF OBJECT_ID('ATIVIDADE_VINCULADA', 'U') IS NOT NULL
	DROP TABLE ATIVIDADE_VINCULADA
IF OBJECT_ID('ATIVIDADE', 'U') IS NOT NULL
	DROP TABLE ATIVIDADE
IF OBJECT_ID('SOLICITACAO_MATRICULA', 'U') IS NOT NULL
	DROP TABLE SOLICITACAO_MATRICULA
IF OBJECT_ID('DISCIPLINA_OFERTADA', 'U') IS NOT NULL
	DROP TABLE DISCIPLINA_OFERTADA
IF OBJECT_ID('CURSO', 'U') IS NOT NULL
	DROP TABLE CURSO
IF OBJECT_ID('DISCIPLINA', 'U') IS NOT NULL
	DROP TABLE DISCIPLINA
IF OBJECT_ID('PROFESSOR', 'U') IS NOT NULL
	DROP TABLE PROFESSOR
IF OBJECT_ID('ALUNO', 'U') IS NOT NULL
	DROP TABLE ALUNO
IF OBJECT_ID('COORDENADOR', 'U') IS NOT NULL
	DROP TABLE COORDENADOR
IF OBJECT_ID('USUARIO', 'U') IS NOT NULL
	DROP TABLE USUARIO
 
CREATE TABLE USUARIO(
	ID INT IDENTITY PRIMARY KEY,
	LOGIN VARCHAR(50) UNIQUE,
	SENHA VARCHAR(50) NOT NULL,
	DT_EXPIRACAO DATETIME DEFAULT ('1900-01-01')
);

CREATE TABLE COORDENADOR(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE ALUNO(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,
	RA VARCHAR(50) NOT NULL,
	FOTO VARCHAR(500)
);

CREATE TABLE PROFESSOR(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,
	APELIDO VARCHAR(50) NOT NULL
);

CREATE TABLE DISCIPLINA(
	ID INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL UNIQUE,
	DATA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(10) NOT NULL DEFAULT('ABERTA') CHECK( STATUS IN ('ABERTA', 'FECHADA') ),
	PLANO_DE_ENSINO VARCHAR(500) NOT NULL,
	CARGA_HORARIA INT NOT NULL CHECK( CARGA_HORARIA IN (40, 80) ),
	COMPETENCIAS VARCHAR(500) NOT NULL,
	HABILIDADES VARCHAR(500) NOT NULL,
	EMENTA VARCHAR(500) NOT NULL,
	CONTEUDO_PROGRAMATICO VARCHAR(500) NOT NULL,
	BIBLIOGRAFIA_BASICA VARCHAR(500) NOT NULL,
	BIBLIOGRAFIA_COMPLEMENTAR VARCHAR(500) NOT NULL,
	PERCENTUAL_PRATICO INT NOT NULL CHECK( PERCENTUAL_PRATICO >= 0 AND PERCENTUAL_PRATICO <= 100 ),
	PERCENTUAL_TEORICO INT NOT NULL CHECK( PERCENTUAL_TEORICO >= 0 AND PERCENTUAL_TEORICO <= 100 ),
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID) NOT NULL,
);

CREATE TABLE CURSO(
	ID INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE DISCIPLINA_OFERTADA(
	ID INT IDENTITY PRIMARY KEY,
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID) NOT NULL,
	DT_INICIO_MATRICULA DATETIME,
	DT_FIM_MATRICULA DATETIME,
	ID_DISCIPLINA INT FOREIGN KEY REFERENCES DISCIPLINA(ID) NOT NULL,
	ID_CURSO INT FOREIGN KEY REFERENCES CURSO(ID) NOT NULL,
	ANO INT NOT NULL CHECK( ANO >= 1900 AND ANO <= 2100 ),
	SEMESTRE INT NOT NULL CHECK( SEMESTRE IN (1, 2) ),
	TURMA VARCHAR(1) NOT NULL CHECK( TURMA LIKE ( '[A-Z]' ) ),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID),
	METODOLOGIA VARCHAR(500),
	RECURSOS VARCHAR(500),
	CRITERIO_AVALIACAO VARCHAR(500),
	PLANO_DE_AULAS VARCHAR(500),
	CONSTRAINT UQ_OFERTA UNIQUE ( ID_CURSO, ANO, SEMESTRE, TURMA )
);

CREATE TABLE SOLICITACAO_MATRICULA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_DISCIPLINA_OFERTADA INT FOREIGN KEY REFERENCES DISCIPLINA_OFERTADA(ID) NOT NULL,
	DT_SOLICITACAO DATETIME NOT NULL DEFAULT (GETDATE()),
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID),
	STATUS VARCHAR(20) DEFAULT('SOLICITADA') CHECK( STATUS IN ('SOLICITADA', 'APROVADA', 'REJEITADA', 'CANCELADA') )

);

CREATE TABLE ATIVIDADE(
	ID INT IDENTITY PRIMARY KEY,
	TITULO VARCHAR(100) NOT NULL UNIQUE,
	DESCRICAO VARCHAR(500),
	CONTEUDO VARCHAR(100) NOT NULL,
	TIPO VARCHAR(20) NOT NULL CHECK ( TIPO IN ('RESPOSTA ABERTA', 'TESTE') ),
	EXTRAS VARCHAR(100),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
);

CREATE TABLE ATIVIDADE_VINCULADA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ATIVIDADE INT FOREIGN KEY REFERENCES ATIVIDADE(ID) NOT NULL,
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
	ID_DISCIPLINA_OFERTADA INT FOREIGN KEY REFERENCES DISCIPLINA_OFERTADA(ID) NOT NULL,
	ROTULO VARCHAR(50) NOT NULL,
	STATUS VARCHAR(50) NOT NULL CHECK( STATUS IN ('DISPONIBILIZADA','ABERTA','FECHADA','ENCERRADA','PRORROGADA') ),
	CONSTRAINT UQ_ATIVIDADE UNIQUE ( ID_ATIVIDADE, ID_DISCIPLINA_OFERTADA, ROTULO )
);

CREATE TABLE ENTREGA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_ATIVIDADE_VINCULADA INT FOREIGN KEY REFERENCES ATIVIDADE_VINCULADA(ID) NOT NULL,
	TITULO VARCHAR(50) NOT NULL,
	RESPOSTA VARCHAR(500) NOT NULL,
	DT_ENTREGA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENTREGUE') CHECK( STATUS IN ('ENTREGUE','CORRIGIDO') ),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID),
	NOTA DECIMAL(4,2) CHECK( NOTA >= 0 AND NOTA <= 10 ),
	DT_AVALIACAO DATETIME,
	OBS VARCHAR(500),
	CONSTRAINT UQ_ENTREGA UNIQUE ( ID_ALUNO, ID_ATIVIDADE_VINCULADA )
);

CREATE TABLE MENSAGEM(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
	ASSUNTO VARCHAR(50) NOT NULL,
	REFERENCIA VARCHAR(50) NOT NULL,
	CONTEUDO VARCHAR(500) NOT NULL,
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENVIADO') CHECK( STATUS IN ('ENVIADO','LIDO', 'RESPONDIDO') ),
	DT_ENVIO DATETIME NOT NULL DEFAULT (GETDATE()),
	DT_REPOSTA DATETIME,
	RESPOSTA VARCHAR(500)
);

-- 1. INSIRA UM REGISTRO EM CADA TABELA
INSERT INTO USUARIO VALUES(
'GUIRN', '1234', 26-09-2018
)

INSERT INTO COORDENADOR VALUES (
1,'GUILHERME','GUIRN@GMAIL.COM', '11123456789'    
)

INSERT INTO ALUNO VALUES(
 1, 'NATALIA','PADAWOLF@GMAIL.COM', '11255555', '10252', 'IMG.PNG'   
)

INSERT INTO PROFESSOR VALUES(
1,'JOSÉ','JK@GMAIL.COM','15648123189', 'ZÉ'
)

INSERT INTO DISCIPLINA VALUES(
'ESTATISTICA', GETDATE(),'ABERTA','AULAS SOBRE ESTATISTICA BASICA',80,'NUMEROS','SABER USAR CALCULADORA','AAAA','AULA TODO DIA','LIVROS','WIKIPEDIA',60,40,1
)
 INSERT INTO CURSO VALUES(
     'SI'
 )

 INSERT INTO DISCIPLINA_OFERTADA VALUES(
1,20-05-1995,20-10-1995,1,1,1995,2,'B',1,'AULAS PRATICAS','COMPUTADOR','ACS','AULA'
 )

INSERT INTO SOLICITACAO_MATRICULA VALUES (
    1,1,GETDATE(),1,'APROVADA'
)

INSERT INTO ATIVIDADE VALUES (
    'PROVA','DIFICIL','CALCULO','TESTE','RECUPERAÇÃO',1
)

INSERT INTO ATIVIDADE_VINCULADA VALUES(
    1,1,1,'PROVA','FECHADA'
)

INSERT INTO ENTREGA VALUES (
    1,1,'PROVA','ERREI',06-10-1995,'ENTREGUE',1,6.5,06-10-1995,'ESTUDE MAIS'
)

INSERT INTO MENSAGEM VALUES (
    1,1,'MENSAGEM','ESTATISTICA 2','FAIUSGDFILAUSGDFIUQSD','RESPONDIDO',10-05-1995,11-05-1995,'FAOISDFAIFLASGD'
)


-- 2. CRIE UM USUARIO COM LOGIN 'EMILIO.MURTA' E SENHA '123456'
	INSERT INTO USUARIO(LOGIN,SENHA)
	VALUES('EMILIO.MURTA',123456)
-- 3. ATUALIZE A DT_EXPIRACAO DO USUARIO PARA O DIA DE HOJE E A SENHA PARA '654321'
UPDATE USUARIO SET DT_EXPIRACAO=GETDATE(), SENHA=654321 WHERE ID =2
-- 4. CRIE UM PROFESSOR PARA O USUARIO CRIADO (UTILIZE UM SELECT PARA DESCOBRIR O ID DO USUARIO CRIADO)
  
	INSERT INTO PROFESSOR(ID_USUARIO,NOME,EMAIL,CELULAR,APELIDO)
	SELECT ID,'EMILIO MURTA','EMILIO.MURTA@','94002-8922','MILIO' FROM USUARIO WHERE LOGIN = 'EMILIO.MURTA'
-- 5. GARANTA A EXISTENCIA DE APENAS TRES DISCIPLINAS: 'LP', 'BD2' E 'ESTATISTICA' -- TODAS COM STATUS ABERTA

SELECT * FROM DISCIPLINA
INSERT INTO DISCIPLINA VALUES (
'LP', 05-05-1995,'ABERTA','AULA',40,'AAA','BBB','CCC','DDD','EEE','FFF',30,70,1
),
('BD2', 03-03-1995,'ABERTA','AULA',80,'AAA','BBB','CCC','DDD','EEE','FFF',40,60,1)
-- 6. CRIE DOIS CURSOS 'SI' E 'ADS' (FAÇA ISSO EM APENAS UMA INSTRUCAO)
INSERT INTO CURSO (NOME) VALUES('SI'),('ADS')
-- 7. OFERECA TODAS AS DISCIPLINAS EM TODOS OS CURSOS (FAÇA ISSO USANDO INSERT COM SELECT)
	-- DICA: SELECT * FROM CURSO, DISCIPLINA RETORNA O PRODUTO CARTESIANO DAS DUAS RELAÇÕES
	-- DICA2: O SELECT ABAIXO UTILIZA ROW_NUMBER PARA TRAZER O NRO DE CADA LINHA (PODE SER UTIL)

		--SELECT ROW_NUMBER() OVER(ORDER BY TABLE_NAME),--
		--	TABLE_NAME 
		--FROM INFORMATION_SCHEMA.TABLES

		SELECT ROW_NUMBER() OVER(ORDER BY DISCIPLINA_OFERTADA)

SELECT * FROM DISCIPLINA_OFERTADA
SELECT * FROM DISCIPLINA
SELECT * FROM CURSO
INSERT INTO DISCIPLINA_OFERTADA (ID_COORDENADOR,DT_INICIO_MATRICULA,DT_FIM_MATRICULA,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA,ID_PROFESSOR,METODOLOGIA,RECURSOS,CRITERIO_AVALIACAO,PLANO_DE_AULAS )
SELECT 1, '05-05-1995','05-05-1995',DISCIPLINA.ID,CURSO.ID,1996+ROW_NUMBER() OVER(ORDER BY DISCIPLINA.ID),1,'B',1,'AAA','BBB','CCC','DDD'
FROM DISCIPLINA,CURSO

INSERT INTO DISCIPLINA_OFERTADA 
SELECT 1, '05-05-1995','05-05-1995',DISCIPLINA.ID,CURSO.ID,1995,1,'B'+,1,'AAA','BBB','CCC','DDD' 
FROM DISCIPLINA,CURSO


-- 8. ATUALIZE O PROFESSOR DE TODAS AS DISCIPLINAS OFERTADAS PARA O PROFESSOR CRIADO (EMILIO.MURTA) -- UTILIZE UPDATE COM SUBSELECT
	UPDATE DISCIPLINA_OFERTADA SET ID_PROFESSOR =(SELECT ID FROM PROFESSOR WHERE NOME = 'EMILIO MURTA')
	SELECT * FROM DISCIPLINA
	SELECT * FROM DISCIPLINA_OFERTADA
	SELECT * FROM PROFESSOR

-- 9. CRIE MAIS 9 ALUNOS (FACA ISSO EM UMA INSTRUCAO APENAS)
INSERT INTO ALUNO (ID_USUARIO,NOME,EMAIL,CELULAR,RA,FOTO) 
	VALUES(1,'Eduardo','edaudo@gmail.com',119997775443,1700168,'foroeduardo'),
	(1,'Leonardo','leo@gmail.com',1152348897,170198,'fotoleo'),
	(1,'Lucas','lucas@gmail.com',119966542235,1702658,'fotolucas'),
	(1,'Leticia','leticia@gmail.com',119975369512,18002356,'fotolet'),
	(1,'Lais','lais@gmail.com',119956984235,1700236,'fotolais'),
	(1,'Gustavo','gustavo@gmail.com',119974236518,1702369,'fotogusta'),
	(1,'Alex','alex@gmail.com',119923654789,1400256,'fotoalex'),
	(1,'David','david@gmail.com',119925469875,1600239,'fotodavid'),
	(1,'Felipe','felipe@gmail.com',119955647789,15601235,'fotofelipe')
-- 10. CRIE UMA SOLICITACAO DE MATRICULA PARA OS PRIMEIROS 5 ALUNOS NO PRIMEIRO CURSO (TODAS AS DISCIPLINAS) -- UTILIZE INSERT COM SELECT
INSERT INTO SOLICITACAO_MATRICULA(ID_ALUNO,ID_DISCIPLINA_OFERTADA,DT_SOLICITACAO,ID_COORDENADOR)
	SELECT ALUNO.ID,DISCIPLINA_OFERTADA.ID,GETDATE(),COORDENADOR.ID FROM ALUNO,DISCIPLINA_OFERTADA, COORDENADOR,DISCIPLINA
	ORDER BY DISCIPLINA.ID OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY 

-- 11. CRIE UMA SOLICITACAO DE MATRICULA PARA OS ULTIMOS 5 ALUNOS NO SEGUNDO CURSO (TODAS AS DISCIPLINAS) -- UTILIZE INSERT COM SELECT
	-- DICA: ORDER BY <ALGUMA_COISA> OFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY; 
	-- ESSE COMANDO INSERIDO NO FINAL DO SELECT VAI DESPREZAR AS 10 PRIMEIRAS LINHAS E TRARÁ AS PRÓXIMAS 5
	SELECT * FROM SOLICITACAO_MATRICULA
	SELECT * FROM ALUNO
INSERT INTO SOLICITACAO_MATRICULA(ID_ALUNO,ID_DISCIPLINA_OFERTADA,DT_SOLICITACAO,ID_COORDENADOR)
	SELECT ALUNO.ID,DISCIPLINA_OFERTADA.ID,GETDATE(),COORDENADOR.ID FROM ALUNO,DISCIPLINA_OFERTADA, COORDENADOR,DISCIPLINA
	ORDER BY DISCIPLINA.ID OFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY

-- 12. CRIE 3 ATIVIDADES NOVAS (UMA PARA CADA DISCIPLINA)
INSERT INTO ATIVIDADE (TITULO,DESCRICAO,CONTEUDO,TIPO,EXTRAS,ID_PROFESSOR) 
	VALUES('Atividade LP','Crie uma classe chamada Pessoa, que contenha os
seguintes atributos:','CONTEUDO DA ATIVIDADE DE LP','RESPOSTA ABERTA','BLABLABLA',1),
	('Atividade DB2','Faça uma modelagem conceitual, desenhando as entidades, atributos e
relacionamento abaixo em um DER:','CONTEUDO DA ATIVIDADE DE DB2','TESTE','BLABLABLA',1),
	('Atividade ESTATISTICA','Em um grupo de pessoas, as idades são : 10, 12, 15 e 17 anos.
	 Caso uma pessoa de 16 anos junte-se ao grupo, o que acontece com a média das idades do grupo?',
	 'CONTEUDO DA ATIVIDADE DE ESTATISTICA','TESTE','BLABLABLA',1)
-- 13. VINCULE CADA ATIVIDADE EM SUA DISCIPLINA OFERTADA (UMA POR CURSO) E UTILIZANDO O PROFESSOR (EMILIO.MURTA) PARA CADA ATIVIDADE VINCULADA 
		-- DEVERÃO SER GERADAS 2 ATIVIDADES_VINCULADAS PARA CADA ATIVIDADE POIS TEMOS CADA DISCIPLINA OFERTADA EM CADA CURSO EM UM TOTAL DE 2 CURSOS
		-- FACA ESSE PROCESSO MANUALMENTE (SEM UTILIZAR INSERT COM SELECT) -- CUIDADO COM OS IDS, SE ERRAR NA INSERÇÃO FAÇA TRUNCATE DAS TABELAS 
		-- OU DROP E CRIE NOVAMENTE
		SELECT * FROM ATIVIDADE
		SELECT * FROM ATIVIDADE_VINCULADA
		SELECT * FROM DISCIPLINA_OFERTADA
		SELECT * FROM ALUNO



-- 14. CRIE UMA ENTREGA PARA CADA ALUNO PARA CADA ATIVIDADE (OS ALUNOS QUE ENTREGAREM DEVEM ESTAR MATRICULADOS NA DISCIPLINA OFERTADA)
		-- PODE FAZER MANUALMENTE OU USANDO INSERT COM SELECT
		
-- 15. INSIRA UMA MENSAGEM DE UM PROFESSOR QUALQUER PARA UM ALUNO QUALQUER -- FACA INSERT MANUAL (SEM INSERT COM SELECT)
-- 16. ATUALIZE AS NOTAS DE TODOS OS ALUNOS QUE O NOME COMEÇA COM A LETRA 'A' PARA 7
UPDATE ENTREGA SET NOTA = 7 WHERE ID_ALUNO =(SELECT ID FROM ALUNO WHERE NOME LIKE 'A%')
-- 17. ATUALIZE A DATA DE INICIO DE TODAS AS DISCIPLINAS OFERTADAS PARA O DIA DE HOJE
INSERT DISCIPLINA_OFERTADA(ID_COORDENADOR,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA)
	VALUES(1,1,1,2018,1,'A')
  
UPDATE DISCIPLINA_OFERTADA SET DT_INICIO_MATRICULA=GETDATE()
-- 18. ATUALIZE A DATA DE FIM DE TODAS AS DISCIPLINAS OFERTADAS PARA O DIA DE HOJE + 7 DIAS
INSERT DISCIPLINA_OFERTADA(ID_COORDENADOR,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA)
	VALUES(1,1,1,2018,1,'A')

UPDATE DISCIPLINA_OFERTADA SET DT_FIM_MATRICULA=GETDATE()+7
-- 19. CRIE UM SCRIPT PARA APAGAR TODOS OS REGISTROS INSERIDOS EM TODAS AS TABELAS (CUIDADO COM A ORDEM DE EXECUÇÃO POR CONTA DAS FKS)
BEGIN TRAN
	DELETE MENSAGEM;
	DELETE ENTREGA;
	DELETE ATIVIDADE_VINCULADA;
	DELETE ATIVIDADE;
	DELETE SOLICITACAO_MATRICULA;
	DELETE DISCIPLINA_OFERTADA;
	DELETE CURSO;
	DELETE DISCIPLINA;
	DELETE PROFESSOR;
	DELETE ALUNO;
	DELETE COORDENADOR;
	DELETE USUARIO;
COMMIT
-- 20. APLIQUE NOVAMENTE TODOS OS PROCEDIMENTOS ANTERIORES ATÉ O PASSO 18 GARANTINDO QUE TERÃO OS MESMOS IDS
CREATE DATABASE AC6


CREATE TABLE USUARIO(
	ID INT IDENTITY PRIMARY KEY,
	LOGIN VARCHAR(50) UNIQUE,
	SENHA VARCHAR(50) NOT NULL,
	DT_EXPIRACAO DATETIME DEFAULT ('1900-01-01')
);

CREATE TABLE COORDENADOR(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE ALUNO(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,
	RA VARCHAR(50) NOT NULL,
	FOTO VARCHAR(500)
);

CREATE TABLE PROFESSOR(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,
	APELIDO VARCHAR(50) NOT NULL
);

CREATE TABLE DISCIPLINA(
	ID INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL UNIQUE,
	DATA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(10) NOT NULL DEFAULT('ABERTA') CHECK( STATUS IN ('ABERTA', 'FECHADA') ),
	PLANO_DE_ENSINO VARCHAR(500) NOT NULL,
	CARGA_HORARIA INT NOT NULL CHECK( CARGA_HORARIA IN (40, 80) ),
	COMPETENCIAS VARCHAR(500) NOT NULL,
	HABILIDADES VARCHAR(500) NOT NULL,
	EMENTA VARCHAR(500) NOT NULL,
	CONTEUDO_PROGRAMATICO VARCHAR(500) NOT NULL,
	BIBLIOGRAFIA_BASICA VARCHAR(500) NOT NULL,
	BIBLIOGRAFIA_COMPLEMENTAR VARCHAR(500) NOT NULL,
	PERCENTUAL_PRATICO INT NOT NULL CHECK( PERCENTUAL_PRATICO >= 0 AND PERCENTUAL_PRATICO <= 100 ),
	PERCENTUAL_TEORICO INT NOT NULL CHECK( PERCENTUAL_TEORICO >= 0 AND PERCENTUAL_TEORICO <= 100 ),
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID) NOT NULL,
);

CREATE TABLE CURSO(
	ID INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE DISCIPLINA_OFERTADA(
	ID INT IDENTITY PRIMARY KEY,
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID) NOT NULL,
	DT_INICIO_MATRICULA DATETIME,
	DT_FIM_MATRICULA DATETIME,
	ID_DISCIPLINA INT FOREIGN KEY REFERENCES DISCIPLINA(ID) NOT NULL,
	ID_CURSO INT FOREIGN KEY REFERENCES CURSO(ID) NOT NULL,
	ANO INT NOT NULL CHECK( ANO >= 1900 AND ANO <= 2100 ),
	SEMESTRE INT NOT NULL CHECK( SEMESTRE IN (1, 2) ),
	TURMA VARCHAR(1) NOT NULL CHECK( TURMA LIKE ( '[A-Z]' ) ),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID),
	METODOLOGIA VARCHAR(500),
	RECURSOS VARCHAR(500),
	CRITERIO_AVALIACAO VARCHAR(500),
	PLANO_DE_AULAS VARCHAR(500),
	CONSTRAINT UQ_OFERTA UNIQUE ( ID_CURSO, ANO, SEMESTRE, TURMA )
);

CREATE TABLE SOLICITACAO_MATRICULA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_DISCIPLINA_OFERTADA INT FOREIGN KEY REFERENCES DISCIPLINA_OFERTADA(ID) NOT NULL,
	DT_SOLICITACAO DATETIME NOT NULL DEFAULT (GETDATE()),
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID),
	STATUS VARCHAR(20) DEFAULT('SOLICITADA') CHECK( STATUS IN ('SOLICITADA', 'APROVADA', 'REJEITADA', 'CANCELADA') )

);

CREATE TABLE ATIVIDADE(
	ID INT IDENTITY PRIMARY KEY,
	TITULO VARCHAR(100) NOT NULL UNIQUE,
	DESCRICAO VARCHAR(500),
	CONTEUDO VARCHAR(100) NOT NULL,
	TIPO VARCHAR(20) NOT NULL CHECK ( TIPO IN ('RESPOSTA ABERTA', 'TESTE') ),
	EXTRAS VARCHAR(100),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
);

CREATE TABLE ATIVIDADE_VINCULADA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ATIVIDADE INT FOREIGN KEY REFERENCES ATIVIDADE(ID) NOT NULL,
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
	ID_DISCIPLINA_OFERTADA INT FOREIGN KEY REFERENCES DISCIPLINA_OFERTADA(ID) NOT NULL,
	ROTULO VARCHAR(50) NOT NULL,
	STATUS VARCHAR(50) NOT NULL CHECK( STATUS IN ('DISPONIBILIZADA','ABERTA','FECHADA','ENCERRADA','PRORROGADA') ),
	CONSTRAINT UQ_ATIVIDADE UNIQUE ( ID_ATIVIDADE, ID_DISCIPLINA_OFERTADA, ROTULO )
);

CREATE TABLE ENTREGA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_ATIVIDADE_VINCULADA INT FOREIGN KEY REFERENCES ATIVIDADE_VINCULADA(ID) NOT NULL,
	TITULO VARCHAR(50) NOT NULL,
	RESPOSTA VARCHAR(500) NOT NULL,
	DT_ENTREGA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENTREGUE') CHECK( STATUS IN ('ENTREGUE','CORRIGIDO') ),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID),
	NOTA DECIMAL(4,2) CHECK( NOTA >= 0 AND NOTA <= 10 ),
	DT_AVALIACAO DATETIME,
	OBS VARCHAR(500),
	CONSTRAINT UQ_ENTREGA UNIQUE ( ID_ALUNO, ID_ATIVIDADE_VINCULADA )
);

CREATE TABLE MENSAGEM(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
	ASSUNTO VARCHAR(50) NOT NULL,
	REFERENCIA VARCHAR(50) NOT NULL,
	CONTEUDO VARCHAR(500) NOT NULL,
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENVIADO') CHECK( STATUS IN ('ENVIADO','LIDO', 'RESPONDIDO') ),
	DT_ENVIO DATETIME NOT NULL DEFAULT (GETDATE()),
	DT_REPOSTA DATETIME,
	RESPOSTA VARCHAR(500)
);


IF OBJECT_ID('MENSAGEM', 'U') IS NOT NULL
	DROP TABLE MENSAGEM
IF OBJECT_ID('ENTREGA', 'U') IS NOT NULL
	DROP TABLE ENTREGA
IF OBJECT_ID('ATIVIDADE_VINCULADA', 'U') IS NOT NULL
	DROP TABLE ATIVIDADE_VINCULADA
IF OBJECT_ID('ATIVIDADE', 'U') IS NOT NULL
	DROP TABLE ATIVIDADE
IF OBJECT_ID('SOLICITACAO_MATRICULA', 'U') IS NOT NULL
	DROP TABLE SOLICITACAO_MATRICULA
IF OBJECT_ID('DISCIPLINA_OFERTADA', 'U') IS NOT NULL
	DROP TABLE DISCIPLINA_OFERTADA
IF OBJECT_ID('CURSO', 'U') IS NOT NULL
	DROP TABLE CURSO
IF OBJECT_ID('DISCIPLINA', 'U') IS NOT NULL
	DROP TABLE DISCIPLINA
IF OBJECT_ID('PROFESSOR', 'U') IS NOT NULL
	DROP TABLE PROFESSOR
IF OBJECT_ID('ALUNO', 'U') IS NOT NULL
	DROP TABLE ALUNO
IF OBJECT_ID('COORDENADOR', 'U') IS NOT NULL
	DROP TABLE COORDENADOR
IF OBJECT_ID('USUARIO', 'U') IS NOT NULL
	DROP TABLE USUARIO
	
INSERT INTO USUARIO VALUES(
'GUIRN', '1234', 26-09-2018
)

INSERT INTO COORDENADOR VALUES (
1,'GUILHERME','GUIRN@GMAIL.COM', '11123456789'    
)

INSERT INTO ALUNO VALUES(
 1, 'NATALIA','PADAWOLF@GMAIL.COM', '11255555', '10252', 'IMG.PNG'   
)

INSERT INTO PROFESSOR VALUES(
1,'JOSÉ','JK@GMAIL.COM','15648123189', 'ZÉ'
)

INSERT INTO DISCIPLINA VALUES(
'ESTATISTICA', GETDATE(),'ABERTA','AULAS SOBRE ESTATISTICA BASICA',80,'NUMEROS','SABER USAR CALCULADORA','AAAA','AULA TODO DIA','LIVROS','WIKIPEDIA',60,40,1
)
 INSERT INTO CURSO VALUES(
     'SI'
 )

 INSERT INTO DISCIPLINA_OFERTADA VALUES(
1,20-05-1995,20-10-1995,1,1,1995,2,'B',1,'AULAS PRATICAS','COMPUTADOR','ACS','AULA'
 )

INSERT INTO SOLICITACAO_MATRICULA VALUES (
    1,1,GETDATE(),1,'APROVADA'
)

INSERT INTO ATIVIDADE VALUES (
    'PROVA','DIFICIL','CALCULO','TESTE','RECUPERAÇÃO',1
)

INSERT INTO ATIVIDADE_VINCULADA VALUES(
    1,1,1,'PROVA','FECHADA'
)

INSERT INTO ENTREGA VALUES (
    1,1,'PROVA','ERREI',06-10-1995,'ENTREGUE',1,6.5,06-10-1995,'ESTUDE MAIS'
)

INSERT INTO MENSAGEM VALUES (
    1,1,'MENSAGEM','ESTATISTICA 2','FAIUSGDFILAUSGDFIUQSD','RESPONDIDO',10-05-1995,11-05-1995,'FAOISDFAIFLASGD'
)



	INSERT INTO USUARIO(LOGIN,SENHA)
	VALUES('EMILIO.MURTA',123456);

UPDATE USUARIO SET DT_EXPIRACAO=GETDATE(), SENHA=654321 WHERE ID =2;

  
	INSERT INTO PROFESSOR(ID_USUARIO,NOME,EMAIL,CELULAR,APELIDO)
	SELECT ID,'EMILIO MURTA','EMILIO.MURTA@','94002-8922','MILIO' FROM USUARIO WHERE LOGIN = 'EMILIO.MURTA';



INSERT INTO DISCIPLINA VALUES (
'LP', 05-05-1995,'ABERTA','AULA',40,'AAA','BBB','CCC','DDD','EEE','FFF',30,70,1
),
('BD2', 03-03-1995,'ABERTA','AULA',80,'AAA','BBB','CCC','DDD','EEE','FFF',40,60,1);

INSERT INTO CURSO (NOME) VALUES,('ADS');



INSERT INTO DISCIPLINA_OFERTADA (ID_COORDENADOR,DT_INICIO_MATRICULA,DT_FIM_MATRICULA,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA,ID_PROFESSOR,METODOLOGIA,RECURSOS,CRITERIO_AVALIACAO,PLANO_DE_AULAS )
SELECT 1, '05-05-1995','05-05-1995',DISCIPLINA.ID,CURSO.ID,1996+ROW_NUMBER() OVER(ORDER BY DISCIPLINA.ID),1,'B',1,'AAA','BBB','CCC','DDD'
FROM DISCIPLINA,CURSO;




	UPDATE DISCIPLINA_OFERTADA SET ID_PROFESSOR =(SELECT ID FROM PROFESSOR WHERE NOME = 'EMILIO MURTA');


INSERT INTO ALUNO (ID_USUARIO,NOME,EMAIL,CELULAR,RA,FOTO) 
	VALUES(1,'Eduardo','eddo@gmail.com',119996375123,1700168,'foroeduardo'),
	(1,'Leonardo','leo@gmail.com',1152348897,170198,'fotoleo'),
	(1,'Lucas','lucas@gmail.com',119966542235,1702658,'fotolucas'),
	(1,'Leticia','leticia@gmail.com',119975369512,18002356,'fotolet'),
	(1,'Lais','lais@gmail.com',119956984235,1700236,'fotolais'),
	(1,'Gustavo','gustavo@gmail.com',119974236518,1702369,'fotogusta'),
	(1,'Alex','alex@gmail.com',119923654789,1400256,'fotoalex'),
	(1,'David','david@gmail.com',119925469875,1600239,'fotodavid')



INSERT INTO SOLICITACAO_MATRICULA(ID_ALUNO,ID_DISCIPLINA_OFERTADA,DT_SOLICITACAO,ID_COORDENADOR)
	SELECT ALUNO.ID,DISCIPLINA_OFERTADA.ID,GETDATE(),COORDENADOR.ID FROM ALUNO,DISCIPLINA_OFERTADA, COORDENADOR,DISCIPLINA
	ORDER BY DISCIPLINA.ID OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY ;


INSERT INTO SOLICITACAO_MATRICULA(ID_ALUNO,ID_DISCIPLINA_OFERTADA,DT_SOLICITACAO,ID_COORDENADOR)
	SELECT ALUNO.ID,DISCIPLINA_OFERTADA.ID,GETDATE(),COORDENADOR.ID FROM ALUNO,DISCIPLINA_OFERTADA, COORDENADOR,DISCIPLINA
	ORDER BY DISCIPLINA.ID OFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY;

INSERT INTO ATIVIDADE (TITULO,DESCRICAO,CONTEUDO,TIPO,EXTRAS,ID_PROFESSOR) 
	VALUES('Atividade LP','Crie uma classe chamada Pessoa, que contenha os
seguintes atributos:','CONTEUDO DA ATIVIDADE DE LP','RESPOSTA ABERTA','BLABLABLA',1),
	('Atividade DB2','Faça uma modelagem conceitual, desenhando as entidades, atributos e
relacionamento abaixo em um DER:','CONTEUDO DA ATIVIDADE DE DB2','TESTE','BLABLABLA',1),
	('Atividade ESTATISTICA','Em um grupo de pessoas, as idades são : 10, 12, 15 e 17 anos.
	 Caso uma pessoa de 16 anos junte-se ao grupo, o que acontece com a média das idades do grupo?',
	 'CONTEUDO DA ATIVIDADE DE ESTATISTICA','TESTE','BLABLABLA',1);

INSERT INTO MENSAGEM(ID_ALUNO,ID_PROFESSOR,ASSUNTO,REFERENCIA,CONTEUDO,STATUS,DT_REPOSTA,
RESPOSTA)
	VALUES(2,1,'CORREÇÃO DA ATIVIDADE','REFERENTE A AULA 2','--CODIGO SQL---','RESPONDIDO','27-09-2018','modelagem 
faltou associativa endereco x fabricante
faltou chave composta (vendas anuais)');

UPDATE ENTREGA SET NOTA = 7 WHERE ID_ALUNO =(SELECT ID FROM ALUNO WHERE NOME LIKE 'A%');

INSERT DISCIPLINA_OFERTADA(ID_COORDENADOR,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA)
	VALUES(1,1,1,2018,1,'A');
  
UPDATE DISCIPLINA_OFERTADA SET DT_INICIO_MATRICULA=GETDATE();
INSERT DISCIPLINA_OFERTADA(ID_COORDENADOR,ID_DISCIPLINA,ID_CURSO,ANO,SEMESTRE,TURMA)
	VALUES(1,1,1,2018,1,'A');
AC6.txt
Exibindo AC6.txt.